# HG changeset patch
# Parent cfaf90b22fc3c05025890bd1acfab2c49ec77594
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1335808031 -10800

diff --git a/browser/devtools/webconsole/test/Makefile.in b/browser/devtools/webconsole/test/Makefile.in
--- a/browser/devtools/webconsole/test/Makefile.in
+++ b/browser/devtools/webconsole/test/Makefile.in
@@ -57,17 +57,16 @@ include $(topsrcdir)/config/rules.mk
 	browser_webconsole_bug_580400_groups.js \
 	browser_webconsole_bug_588730_text_node_insertion.js \
 	browser_webconsole_bug_601667_filter_buttons.js \
 	browser_webconsole_bug_597136_external_script_errors.js \
 	browser_webconsole_bug_597136_network_requests_from_chrome.js \
 	browser_webconsole_completion.js \
 	browser_webconsole_console_logging_api.js \
 	browser_webconsole_consoleonpage.js \
-	browser_webconsole_chrome.js \
 	browser_webconsole_execution_scope.js \
 	browser_webconsole_for_of.js \
 	browser_webconsole_history.js \
 	browser_webconsole_hud_getters.js \
 	browser_webconsole_js_input_and_output_styling.js \
 	browser_webconsole_js_input_expansion.js \
 	browser_webconsole_live_filtering_of_message_types.js \
 	browser_webconsole_live_filtering_on_search_strings.js \
diff --git a/browser/devtools/webconsole/test/browser_webconsole_window_zombie.js b/browser/devtools/webconsole/test/browser_webconsole_window_zombie.js
--- a/browser/devtools/webconsole/test/browser_webconsole_window_zombie.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_window_zombie.js
@@ -2,43 +2,42 @@
 /* Any copyright is dedicated to the Public Domain.
    http://creativecommons.org/publicdomain/zero/1.0/ */
 
 const TEST_URI = "data:text/html;charset=utf-8,<p>test for bug 577721";
 
 const POSITION_PREF = "devtools.webconsole.position";
 
 function test() {
+  omgLastTest = true;
   addTab(TEST_URI);
-  browser.addEventListener("DOMContentLoaded", onLoad, false);
+  browser.addEventListener("load", function onLoad() {
+    browser.removeEventListener("load", onLoad, true);
+    
+    openConsole(consoleOpened);
+  }, true);
   registerCleanupFunction(testEnd);
 }
 
 function testEnd() {
   Services.prefs.clearUserPref(POSITION_PREF);
 }
 
-function onLoad() {
-  browser.removeEventListener("DOMContentLoaded", onLoad, false);
-
-  openConsole();
-
-  let hudId = HUDService.getHudIdByWindow(content);
-  let hudRef = HUDService.hudReferences[hudId];
+function consoleOpened(hudRef) {
   let hudBox = hudRef.HUDBox;
 
   // listen for the panel popupshown event.
   document.addEventListener("popupshown", function popupShown() {
     document.removeEventListener("popupshown", popupShown, false);
 
     ok(hudRef.consolePanel, "console is in a panel");
 
     document.addEventListener("popuphidden", function popupHidden() {
       document.removeEventListener("popuphidden", popupHidden, false);
-      finishTest();
+      executeSoon(finishTest);
     }, false);
 
     // Close the window console via the menu item
     let menu = document.getElementById("webConsole");
     menu.click();
   }, false);
 
   hudRef.positionConsole("window");
diff --git a/browser/devtools/webconsole/test/head.js b/browser/devtools/webconsole/test/head.js
--- a/browser/devtools/webconsole/test/head.js
+++ b/browser/devtools/webconsole/test/head.js
@@ -35,16 +35,17 @@
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 let tempScope = {};
 Cu.import("resource:///modules/HUDService.jsm", tempScope);
 let HUDService = tempScope.HUDService;
 let ConsoleUtils = tempScope.ConsoleUtils;
+let omgLastTest = false;
 
 function log(aMsg)
 {
   dump("*** WebConsoleTest: " + aMsg + "\n");
 }
 
 function pprint(aObj)
 {
@@ -148,29 +149,46 @@ function testLogEntry(aOutputNode, aMatc
  * @param string aString
  *        The string to find.
  */
 function findLogEntry(aString)
 {
   testLogEntry(outputNode, aString, "found " + aString);
 }
 
-function openConsole()
+function openConsole(callback)
 {
   HUDService.activateHUDForContext(tab);
+  callback && callback(HUDService.getHudByWindow(content));
 }
 
 function closeConsole()
 {
   HUDService.deactivateHUDForContext(tab);
 }
 
 function finishTest()
 {
-  finish();
+  if (omgLastTest) {
+    dump("omgLastTest!!!\n");
+    let scope = {};
+    let ccdump_path = "file:///home/mihai/src/ccdump";
+    Services.scriptloader.loadSubScript(ccdump_path + "/simple-wrapper.js", scope);
+    let ccdump = new scope.ccdump_wrapper({
+      global: scope,
+      ccdump_path: ccdump_path,
+    });
+    ccdump.save("/home/mihai/Desktop/ccdump-dbg-no-memleaks-" + Date.now(),
+      function _onCcdumpSave() {
+        dump("omgLastTest2!!!\n");
+        executeSoon(finish);
+      });
+  } else {
+    finish();
+  }
 }
 
 function tearDown()
 {
   try {
     HUDService.deactivateHUDForContext(gBrowser.selectedTab);
   }
   catch (ex) {
